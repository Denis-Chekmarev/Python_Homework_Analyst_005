# Создайте два списка — один с названиями языков программирования, другой — с числами от 1 до длины первого.
# ['python', 'c#'] [1,2]

# Вам нужно сделать две функции: первая из которых создаст список кортежей, состоящих из номера и языка, написанного большими буквами.
# [(1,'PYTHON'), (2,'C#')]

# Вторая — которая отфильтрует этот список следующим образом: 
# если сумма очков слова имеет в делителях номер, с которым она в паре в кортеже, то кортеж остается, 
# его номер заменяется на сумму очков.

# [сумма очков c# = 102, в делителях есть 2 с которым в паре. Значит список будет]
# [(1,'PYTHON'), (102,'C#')]
# Если нет — удаляется. Суммой очков называется сложение порядковых номеров букв в слове. 
# Порядковые номера смотрите в этой таблице, в третьем столбце: https://www.charset.org/utf-8
# Это — 16-ричная система, поищите, как правильнее и быстрее получать эти символы.
# Cложите получившиеся числа и верните из функции в качестве ответа вместе с преобразованным списком


languages = ['python', 'c#', 'PHP', 'Java', 'Go', 'JavaScript']
numbers = [i for i in range(1, len(languages)+1)]

combine_list = list(zip(numbers, [i.upper() for i in languages]))


for elem in combine_list:
    summ = sum([ord(str(i)) for i in elem[1]])
    index = combine_list.index(elem)
    delete_indexes = []
    if summ % elem[0] != 0:
        delete_indexes.append(index)
    combine_list[index] = (summ, elem[1])

for index in delete_indexes:
    combine_list.pop(index)

print(combine_list)
